"use strict";(self.webpackChunksinnammanyo_cn=self.webpackChunksinnammanyo_cn||[]).push([[6400],{71561:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>s,metadata:()=>m,toc:()=>o});var n=t(87462),r=(t(67294),t(3905));t(83989);const s={id:"data-structures-tree-traversal",title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",sidebar_label:"\u904d\u5386"},l=void 0,m={unversionedId:"programming/data-structures/tree/data-structures-tree-traversal",id:"programming/data-structures/tree/data-structures-tree-traversal",title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",description:"\u76f8\u5173\u9898\u76ee",source:"@site/docs/stack/programming/data-structures/tree/traversal.md",sourceDirName:"programming/data-structures/tree",slug:"/programming/data-structures/tree/data-structures-tree-traversal",permalink:"/stack/programming/data-structures/tree/data-structures-tree-traversal",draft:!1,editUrl:"https://github.com/rcxxx/sinnammanyo.cn/tree/master/docs/stack/programming/data-structures/tree/traversal.md",tags:[],version:"current",frontMatter:{id:"data-structures-tree-traversal",title:"\u4e8c\u53c9\u6811\u7684\u904d\u5386",sidebar_label:"\u904d\u5386"},sidebar:"\u2328\ufe0f programming",previous:{title:"\u6811",permalink:"/stack/category/tree"},next:{title:"Algorithm",permalink:"/stack/category/algorithm"}},p={},o=[{value:"\u76f8\u5173\u9898\u76ee",id:"\u76f8\u5173\u9898\u76ee",level:2},{value:"\u9012\u5f52\u904d\u5386",id:"\u9012\u5f52\u904d\u5386",level:2},{value:"\u524d\u5e8f",id:"\u524d\u5e8f",level:3},{value:"\u4e2d\u5e8f",id:"\u4e2d\u5e8f",level:3},{value:"\u540e\u5e8f",id:"\u540e\u5e8f",level:3},{value:"\u8fed\u4ee3\u904d\u5386",id:"\u8fed\u4ee3\u904d\u5386",level:2},{value:"\u524d\u5e8f",id:"\u524d\u5e8f-1",level:3},{value:"\u4e2d\u5e8f",id:"\u4e2d\u5e8f-1",level:3},{value:"\u540e\u5e8f",id:"\u540e\u5e8f-1",level:3},{value:"Morris \u904d\u5386",id:"morris-\u904d\u5386",level:2},{value:"\u524d\u5e8f",id:"\u524d\u5e8f-2",level:3},{value:"\u4e2d\u5e8f",id:"\u4e2d\u5e8f-2",level:3},{value:"\u540e\u5e8f",id:"\u540e\u5e8f-2",level:3}],i={toc:o};function c(e){let{components:a,...t}=e;return(0,r.kt)("wrapper",(0,n.Z)({},i,t,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u76f8\u5173\u9898\u76ee"},"\u76f8\u5173\u9898\u76ee"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/binary-tree-inorder-traversal/"},"#94. \u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386")),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/binary-tree-preorder-traversal/"},"#144. \u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386")),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://leetcode.cn/problems/binary-tree-postorder-traversal/"},"#145. \u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386"))),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u9012\u5f52\u904d\u5386"},"\u9012\u5f52\u904d\u5386"),(0,r.kt)("p",null,"\u4e8c\u53c9\u6811\u7684\u904d\u5386\u5929\u7136\u5c31\u5177\u6709\u9012\u5f52\u6027\u8d28\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\u6765\u6a21\u62df"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"void traversal(TreeNode* cur) {\n    if(cur==nullptr) {\n        return;\n    }\n    traversal(cur->left, v);   \n    traversal(cur->right, v);\n}\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"\u65f6\u95f4\u590d\u6742\u5ea6"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("span",{parentName:"td",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"\u7a7a\u95f4\u590d\u6742\u5ea6"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("span",{parentName:"td",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))))))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a\u9012\u5f52\u8fc7\u7a0b\u4e2d\u6808\u7684\u5f00\u9500\uff0c\u5e73\u5747\u60c5\u51b5\u4e3a ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"log"),(0,r.kt)("mo",{parentName:"mrow"},"\u2061"),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(\\log n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mop"},"lo",(0,r.kt)("span",{parentName:"span",style:{marginRight:"0.01389em"}},"g")),(0,r.kt)("span",{parentName:"span",className:"mspace",style:{marginRight:"0.1667em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))),"\uff0c\u6700\u574f\u60c5\u51b5\u4e0b\u6811\u5448\u94fe\u72b6\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a ",(0,r.kt)("span",{parentName:"li",className:"math math-inline"},(0,r.kt)("span",{parentName:"span",className:"katex"},(0,r.kt)("span",{parentName:"span",className:"katex-mathml"},(0,r.kt)("math",{parentName:"span",xmlns:"http://www.w3.org/1998/Math/MathML"},(0,r.kt)("semantics",{parentName:"math"},(0,r.kt)("mrow",{parentName:"semantics"},(0,r.kt)("mi",{parentName:"mrow"},"O"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},"("),(0,r.kt)("mi",{parentName:"mrow"},"n"),(0,r.kt)("mo",{parentName:"mrow",stretchy:"false"},")")),(0,r.kt)("annotation",{parentName:"semantics",encoding:"application/x-tex"},"O(n)")))),(0,r.kt)("span",{parentName:"span",className:"katex-html","aria-hidden":"true"},(0,r.kt)("span",{parentName:"span",className:"base"},(0,r.kt)("span",{parentName:"span",className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal",style:{marginRight:"0.02778em"}},"O"),(0,r.kt)("span",{parentName:"span",className:"mopen"},"("),(0,r.kt)("span",{parentName:"span",className:"mord mathnormal"},"n"),(0,r.kt)("span",{parentName:"span",className:"mclose"},")"))))))),(0,r.kt)("h3",{id:"\u524d\u5e8f"},"\u524d\u5e8f"),(0,r.kt)("p",null,"\u524d\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a\u6839\u8282\u70b9 -> \u5de6\u5b50\u6811 -> \u53f3\u5b50\u6811\uff0c\u5f53\u8bbf\u95ee\u5230\u5de6/\u53f3\u5b50\u6811\u65f6\u7528\u540c\u6837\u7684\u987a\u5e8f\u904d\u5386"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void traversal(TreeNode* cur, vector<int>& v) {\n        if(cur==nullptr) {\n            return;\n        }\n        // \u4e2d - \u5de6 - \u53f3\n        v.push_back(cur->val);\n        traversal(cur->left, v);   \n        traversal(cur->right, v);\n    }\n\n    vector<int> preorderTraversal(TreeNode* root) {\n        vector<int> v;\n        traversal(root, v);\n        return v;\n    }\n};\n")),(0,r.kt)("h3",{id:"\u4e2d\u5e8f"},"\u4e2d\u5e8f"),(0,r.kt)("p",null,"\u4e2d\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 -> \u6839\u8282\u70b9 -> \u53f3\u5b50\u6811\uff0c\u5f53\u8bbf\u95ee\u5230\u5de6/\u53f3\u5b50\u6811\u65f6\u7528\u540c\u6837\u7684\u987a\u5e8f\u904d\u5386"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void traversal(TreeNode* cur, vector<int>& v) {\n        if(cur==nullptr) {\n            return;\n        }\n        // \u5de6 - \u4e2d - \u53f3\n        traversal(cur->left, v);   \n        v.push_back(cur->val);\n        traversal(cur->right, v);\n    }\n\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> v;\n        traversal(root, v);\n        return v;\n    }\n};\n")),(0,r.kt)("h3",{id:"\u540e\u5e8f"},"\u540e\u5e8f"),(0,r.kt)("p",null,"\u540e\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 -> \u53f3\u5b50\u6811 -> \u6839\u8282\u70b9\uff0c\u5f53\u8bbf\u95ee\u5230\u5de6/\u53f3\u5b50\u6811\u65f6\u7528\u540c\u6837\u7684\u987a\u5e8f\u904d\u5386"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    void traversal(TreeNode* cur, vector<int>& v) {\n        if(cur==nullptr) {\n            return;\n        }\n        // \u5de6 - \u53f3 - \u4e2d\n        traversal(cur->left, v);\n        traversal(cur->right, v); \n        v.push_back(cur->val);\n    }\n\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> v;\n        traversal(root, v);\n        return v;\n    }\n};\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u9012\u5f52\u904d\u5386\u4e2d\u7684\u524d\u3001\u4e2d\u3001\u540e\u5e8f\u904d\u5386\u7684\u533a\u522b\uff0c\u5728\u4e8e\u9012\u5f52\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"\u8fed\u4ee3\u904d\u5386"},"\u8fed\u4ee3\u904d\u5386"),(0,r.kt)("p",null,"\u8fed\u4ee3\u6cd5\u4e0e\u9012\u5f52\u601d\u8def\u76f8\u540c\uff0c\u533a\u522b\u5728\u4e8e\u9012\u5f52\u65f6\u9690\u5f0f\u7684\u7ef4\u62a4\u4e86\u4e00\u4e2a\u6808\uff0c\u8fed\u4ee3\u65f6\u9700\u8981\u663e\u5f0f\u7684\u5c06\u8fd9\u4e2a\u6808\u521b\u5efa\u51fa\u6765"),(0,r.kt)("h3",{id:"\u524d\u5e8f-1"},"\u524d\u5e8f"),(0,r.kt)("p",null,"\u6309\u7167\u524d\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a\u6839\u8282\u70b9 -> \u5de6\u5b50\u6811 -> \u53f3\u5b50\u6811\uff0c\u5f53\u8bbf\u95ee\u5230\u5f53\u524d\u8282\u70b9\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5c06\u5176 ",(0,r.kt)("inlineCode",{parentName:"p"},"val")," \u6dfb\u52a0\u8fdb\u6570\u7ec4\uff0c\u7136\u540e\u5c06\u5176\u5165\u6808\uff0c\u5c06\u8282\u70b9\u5f80\u5de6\u5b50\u6811\u8fed\u4ee3\uff0c\u91cd\u590d\u64cd\u4f5c\u76f4\u5230\u5de6\u5b50\u6811\u4e3a\u7a7a\uff0c\u83b7\u53d6\u6808\u9876\uff0c\u5e76\u5411\u5176\u53f3\u5b50\u6811\u8fed\u4ee3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> preorderTraversal(TreeNode *root) {\n        vector<int> res;\n        if (root == nullptr) {\n            return res;\n        }\n\n        stack<TreeNode*> st;\n        TreeNode* node = root;\n        while(!st.empty() || node != nullptr) {\n            while(node != nullptr) {\n                res.push_back(node->val);\n                st.push(node);\n                node = node->left;\n            }\n\n            node = st.top();\n            st.pop();\n            node = node->right;\n        }\n\n        return res;\n    }\n};\n")),(0,r.kt)("h3",{id:"\u4e2d\u5e8f-1"},"\u4e2d\u5e8f"),(0,r.kt)("p",null,"\u6309\u7167\u4e2d\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 -> \u6839\u8282\u70b9 -> \u53f3\u5b50\u6811\uff0c\u5047\u5982\u5de6\u5b50\u6811\u4e0d\u4e3a\u7a7a\uff0c\u5c06\u5176\u5165\u6808\uff0c\u5e76\u5411\u5de6\u5b50\u6811\u7ee7\u7eed\u8fed\u4ee3\uff0c\u5f53\u5de6\u5b50\u6811\u4e3a\u7a7a\u65f6\uff0c\u5f53\u524d\u6808\u9876\u5219\u4e3a\u6839\u8282\u70b9\uff0c\u5c06\u5176\u503c\u5b58\u5165\u6570\u7ec4\uff0c\u5e76\u5411\u53f3\u5b50\u6811\u8fed\u4ee3"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> res;\n        stack<TreeNode*> st;\n        TreeNode* node = root;\n        while (!st.empty() || node != nullptr) {\n            while (node != nullptr) {\n                st.push(node);\n                node = node->left;\n            }\n            node = st.top();\n            st.pop();\n            res.push_back(node->val);\n            node = node->right;\n        }\n        return res;\n    }\n};\n")),(0,r.kt)("h3",{id:"\u540e\u5e8f-1"},"\u540e\u5e8f"),(0,r.kt)("p",null,"\u6309\u7167\u540e\u5e8f\u904d\u5386\u7684\u8bbf\u95ee\u987a\u5e8f\uff1a\u5de6\u5b50\u6811 -> \u53f3\u5b50\u6811 -> \u6839\u8282\u70b9\uff0c\u5f53\u5de6\u5b50\u6811\u4e0d\u4e3a\u7a7a\u65f6\uff0c\u5c06\u8282\u70b9\u5165\u6808\uff0c\u5e76\u5411\u5de6\u5b50\u6811\u8fed\u4ee3\uff0c\u5f53\u5de6\u5b50\u6811\u4e3a\u7a7a\u65f6\uff0c\u83b7\u53d6\u6808\u9876\u7684\u8282\u70b9\uff0c\u5224\u65ad\u5176\u53f3\u5b50\u6811\uff0c"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> res;\n        stack<TreeNode*> st;\n        TreeNode* node = root;\n        TreeNode* prev = nullptr;\n        while (!st.empty() || node != nullptr) {\n            while (node != nullptr) {\n                st.push(node);\n                node = node->left;\n            }\n            node = st.top();\n            st.pop();\n\n            if (node->right == nullptr || node->right == prev) {\n                res.push_back(node->val);\n                prev = node;\n                node = nullptr;\n            } else {\n                st.push(node);\n                node = node->right;\n            }            \n        }\n        return res;\n    }\n};\n")),(0,r.kt)("hr",null),(0,r.kt)("h2",{id:"morris-\u904d\u5386"},"Morris \u904d\u5386"),(0,r.kt)("h3",{id:"\u524d\u5e8f-2"},"\u524d\u5e8f"),(0,r.kt)("h3",{id:"\u4e2d\u5e8f-2"},"\u4e2d\u5e8f"),(0,r.kt)("h3",{id:"\u540e\u5e8f-2"},"\u540e\u5e8f"))}c.isMDXComponent=!0}}]);