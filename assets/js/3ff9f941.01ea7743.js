"use strict";(self.webpackChunksinnammanyo_cn=self.webpackChunksinnammanyo_cn||[]).push([[6046],{27601:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>p});var a=n(87462),l=(n(67294),n(3905)),s=(n(83989),n(51007)),r=n(31937);const c={id:"cloud-tease-cat-aliyun-mqtt",title:"\u8fdc\u7a0b\u9017\u732b \u2014\u2014 \u5c0f\u7a0b\u5e8f mqtt IoT",sidebar_label:"\u963f\u91cc\u4e91 IoT"},i=void 0,o={unversionedId:"studio/\u4e91\u9017\u732b/cloud-tease-cat-aliyun-mqtt",id:"studio/\u4e91\u9017\u732b/cloud-tease-cat-aliyun-mqtt",title:"\u8fdc\u7a0b\u9017\u732b \u2014\u2014 \u5c0f\u7a0b\u5e8f mqtt IoT",description:"\u89c6\u9891\u6f14\u793a",source:"@site/docs/projects/studio/\u4e91\u9017\u732b/\u963f\u91cc\u4e91mqtt.md",sourceDirName:"studio/\u4e91\u9017\u732b",slug:"/studio/\u4e91\u9017\u732b/cloud-tease-cat-aliyun-mqtt",permalink:"/projects/studio/\u4e91\u9017\u732b/cloud-tease-cat-aliyun-mqtt",draft:!1,editUrl:"https://github.com/rcxxx/sinnammanyo.cn/tree/master/docs/projects/studio/\u4e91\u9017\u732b/\u963f\u91cc\u4e91mqtt.md",tags:[],version:"current",frontMatter:{id:"cloud-tease-cat-aliyun-mqtt",title:"\u8fdc\u7a0b\u9017\u732b \u2014\u2014 \u5c0f\u7a0b\u5e8f mqtt IoT",sidebar_label:"\u963f\u91cc\u4e91 IoT"},sidebar:"\ud83e\uddea projects",previous:{title:"B\u7ad9\u76f4\u64ad\u5f39\u5e55\u4ea4\u4e92",permalink:"/projects/studio/\u4e91\u9017\u732b/cloud-tease-cat-danmu-hunter"}},m={},p=[{value:"\u89c6\u9891\u6f14\u793a",id:"\u89c6\u9891\u6f14\u793a",level:3},{value:"\u9879\u76ee\u5730\u5740",id:"\u9879\u76ee\u5730\u5740",level:3},{value:"\u914d\u7f6e",id:"\u914d\u7f6e",level:2},{value:"Python \u63a5\u5165\u963f\u91cc\u4e91 MQTT \u8ba2\u9605\u8bdd\u9898",id:"python-\u63a5\u5165\u963f\u91cc\u4e91-mqtt-\u8ba2\u9605\u8bdd\u9898",level:2},{value:"\u52a0\u5165\u4e32\u53e3\u63a7\u5236\u7684\u5b8c\u6574\u7a0b\u5e8f",id:"\u52a0\u5165\u4e32\u53e3\u63a7\u5236\u7684\u5b8c\u6574\u7a0b\u5e8f",level:3},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(s.Z,{mdxType:"BrowserWindow"},(0,l.kt)("h3",{id:"\u89c6\u9891\u6f14\u793a"},"\u89c6\u9891\u6f14\u793a"),(0,l.kt)(r.Z,{src:"//player.bilibili.com/player.html?aid=528488504&bvid=BV1eu41147ok&cid=1123471632&page=1",bsrc:"https://www.bilibili.com/video/BV1eu41147",mdxType:"BVideo"}),(0,l.kt)("h3",{id:"\u9879\u76ee\u5730\u5740"},"\u9879\u76ee\u5730\u5740"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://github.com/rcxxx/Cloud-Tease-Cat"},"rcxxx/Cloud-Tease-Cat"))))),(0,l.kt)("h2",{id:"\u914d\u7f6e"},"\u914d\u7f6e"),(0,l.kt)("p",null,"\u6240\u4f7f\u7528\u7684\u7269\u8054\u7f51\u5e73\u53f0\u4e3a\u963f\u91cc\u4e91\u7269\u8054\u7f51\u5e73\u53f0"),(0,l.kt)("p",null,"\u6839\u636e\u5df2\u51c6\u5907\u597d\u7684\u7269\u8054\u7f51\u5e73\u53f0\u8bbe\u5907\u4fe1\u606f\uff0c\u521b\u5efa\u94fe\u63a5\u53c2\u6570"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://pictures-1304295136.cos.ap-guangzhou.myqcloud.com/screenshot/cloud-tease-cat/device-info.png",alt:null})),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://pictures-1304295136.cos.ap-guangzhou.myqcloud.com/screenshot/cloud-tease-cat/mqtt-param.png",alt:null})),(0,l.kt)("p",null,"\u521b\u5efa ",(0,l.kt)("inlineCode",{parentName:"p"},"mqtt_cfg.yaml")," \u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title ="mqtt_cfg.yaml"',title:!0,"":'"mqtt_cfg.yaml"'},'# DeviceSecret\nproductKey: ""\ndeviceName: ""\ndeviceSecret: ""\n\n# MQTT Connection Parameters\nclientId: ""\nusername: ""\nmqttHostUrl: ""\nport: 1883\npasswd: ""\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u6839\u636e\u963f\u91cc\u4e91\u7ed9\u51fa\u7684\u4fe1\u606f\uff0c\u5206\u522b\u586b\u5199\u8fd9\u4e9b\u53c2\u6570")),(0,l.kt)("h2",{id:"python-\u63a5\u5165\u963f\u91cc\u4e91-mqtt-\u8ba2\u9605\u8bdd\u9898"},"Python \u63a5\u5165\u963f\u91cc\u4e91 MQTT \u8ba2\u9605\u8bdd\u9898"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bfc\u5165\u6240\u9700\u7684\u5305")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import yaml\nimport time\nimport sys\nimport json\nimport paho.mqtt.client as mqtt\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5bfc\u5165\u914d\u7f6e\u4fe1\u606f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"cfg = yaml.load(open(sys.path[0] + '/mqtt_cfg.yaml', 'r', encoding='utf-8').read(), Loader=yaml.FullLoader)\n\nproductKey = cfg['productKey']\ndeviceName = cfg['deviceName']\ndeviceSecret = cfg['deviceSecret']\nsubTopic = \"/\" + productKey + \"/\" + deviceName + \"/user/get\"\n\nclientId = cfg['clientId']\nusername = cfg['username']\nmqttHostUrl = cfg['mqttHostUrl']\nport = cfg['port']\npasswd= cfg['passwd']\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"connect_mqtt()"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'keepAlive = 300\n\ndef connect_mqtt() -> mqtt:\n    def on_connect(client, userdata, flags, rc):\n        if rc == 0:\n            print("Connected to MQTT Host! ......")\n            print("Connect aliyun IoT Cloud Sucess")\n\n        else:\n            print("Connect failed...  error code is:" + str(rc))\n    \n    client = mqtt.Client(clientId)\n    client.username_pw_set(username=username, password=passwd)\n    client.on_connect = on_connect\n    client.connect(mqttHostUrl, port, keepAlive)\n    return client\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"subscribe()"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},'def subscribe(client: mqtt):\n    def on_message(client, userdata, msg):\n        topic = msg.topic\n        payload = msg.payload.decode()\n        print("receive message ---------- topic is : " + topic)\n        print("receive message ---------- payload is : " + payload)\n\n    print("Waiting for reception")\n    client.subscribe(subTopic)\n    client.on_message = on_message\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"run()"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"def run():\n    client = connect_mqtt()\n    client.loop_start()\n    time.sleep(2)\n    subscribe(client)\n    while True:\n        time.sleep(1)\n\nif __name__ == '__main__':\n    run()\n")),(0,l.kt)("p",null,"\u5373\u53ef\u8ba2\u9605 ",(0,l.kt)("inlineCode",{parentName:"p"},'"/user/get"')," \u8bdd\u9898\uff0c\u5982\u9700\u8981\u5728\u63a5\u6536\u5230\u6d88\u606f\u540e\uff0c\u6267\u884c\u64cd\u4f5c\uff0c\u5728 ",(0,l.kt)("inlineCode",{parentName:"p"},"on_message()")," \u51fd\u6570\u6267\u884c\u64cd\u4f5c\u5373\u53ef"),(0,l.kt)("h3",{id:"\u52a0\u5165\u4e32\u53e3\u63a7\u5236\u7684\u5b8c\u6574\u7a0b\u5e8f"},"\u52a0\u5165\u4e32\u53e3\u63a7\u5236\u7684\u5b8c\u6574\u7a0b\u5e8f"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-py"},"import yaml\nimport time\nimport sys\nimport json\nimport paho.mqtt.client as mqtt\n\ncfg = yaml.load(open(sys.path[0] + '/mqtt_cfg.yaml', 'r', encoding='utf-8').read(), Loader=yaml.FullLoader)\n\nproductKey = cfg['productKey']\ndeviceName = cfg['deviceName']\ndeviceSecret = cfg['deviceSecret']\nsubTopic = \"/\" + productKey + \"/\" + deviceName + \"/user/get\"\n\nclientId = cfg['clientId']\nusername = cfg['username']\nmqttHostUrl = cfg['mqttHostUrl']\nport = cfg['port']\npasswd= cfg['passwd']\n\nkeepAlive = 300\n\nimport serial\n\nser = serial.Serial(port='/dev/ttyUSB0',\n                    baudrate=115200,\n                    timeout=0.5)\n\nKEYS = {'\u5c0f\u7403':[0xA5, 0xA5, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00],\n        '\u6fc0\u5149\u7b14':[0xA5, 0xA5, 0x05, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00],\n        '\u9017\u732b\u68d2':[0xA5, 0xA5, 0x0A, 0x02, 0x01, 0x00, 0x00, 0x00, 0x00]}\n\ndef connect_mqtt() -> mqtt:\n    def on_connect(client, userdata, flags, rc):\n        if rc == 0:\n            print(\"[Connect]: Connected to MQTT Host! ......\")\n            print(\"[Connect]: Connect aliyun IoT Cloud Sucess\")\n\n        else:\n            print(\"[Connect]: Connect failed...  error code is:\" + str(rc))\n    client = mqtt.Client(clientId)\n    client.username_pw_set(username=username, password=passwd)\n    client.on_connect = on_connect\n    client.connect(mqttHostUrl, port, keepAlive)\n    return client\n\ndef subscribe(client: mqtt):\n    def on_message(client, userdata, msg):\n        topic = msg.topic\n        payload = msg.payload.decode()\n        print(\"\\033[0;;42m[Message]\\033[0m: receive message ---------- topic is : \" + topic)\n        print(\"\\033[0;;42m[Message]\\033[0m: receive message ---------- payload is : \" + payload)\n        payload_dict = json.loads(payload)\n        if 'stick' in payload_dict['params']:\n            data = KEYS['\u9017\u732b\u68d2']\n            ser.write(bytes(data))\n            print(\"\\033[0;36m[Publisher]:  Use item: stick\\033[0m\")\n        elif 'ball' in payload_dict['params']:\n            data = KEYS['\u5c0f\u7403']\n            ser.write(bytes(data))\n            print(\"\\033[0;36m[Publisher]:  Use item: ball\\033[0m\")\n        elif 'laser' in payload_dict['params']:\n            data = KEYS['\u6fc0\u5149\u7b14']\n            ser.write(bytes(data))\n            print(\"\\033[0;36m[Publisher]:  Use item: laser\\033[0m\")\n\n\n    print(\"[Subscribe]: Waiting for reception\")\n    client.subscribe(subTopic)\n    client.on_message = on_message\n\ndef run():\n    client = connect_mqtt()\n    client.loop_start()\n    time.sleep(2)\n    subscribe(client)\n    while True:\n        time.sleep(1)\n\nif __name__ == '__main__':\n    run()\n")),(0,l.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://help.aliyun.com/document_detail/438290.html?spm=a2c4g.606639.0.0.4e4b1f4ffcwdtD"},"Paho-MQTT Python\u63a5\u5165\u793a\u4f8b"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://www.emqx.com/zh/blog/how-to-use-mqtt-in-python"},"\u5982\u4f55\u5728 Python \u4e2d\u4f7f\u7528 MQTT")))))}u.isMDXComponent=!0},31937:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(67294),l=n(45697),s=n.n(l);const r="videoFrame_DuF0";function c(e){let{src:t,bsrc:n}=e;return a.createElement(a.Fragment,null,a.createElement("iframe",{src:t,loading:"lazy",scrolling:"no",border:0,frameBorder:"no",framespacing:0,allowFullScreen:!0,className:r}))}c.propTypes={src:s().string.isRequired,bsrc:s().string};const i=c},51007:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(67294);const l="browserWindow_my1Q",s="browserWindowHeader_jXSR",r="buttons_uHc7",c="browserWindowAddressBar_Pd8y",i="dot_giz1",o="browserWindowMenuIcon_Vhuh",m="bar_rrRL",p="browserWindowBody_Idgs";const d=function(e){let{children:t,minHeight:n,url:d}=e;return a.createElement("div",{className:l,style:{minHeight:n}},a.createElement("div",{className:s},a.createElement("div",{className:r},a.createElement("span",{className:i,style:{background:"#f25f58"}}),a.createElement("span",{className:i,style:{background:"#fbbe3c"}}),a.createElement("span",{className:i,style:{background:"#58cb42"}})),a.createElement("div",{className:c},d),a.createElement("div",{className:o},a.createElement("div",null,a.createElement("span",{className:m}),a.createElement("span",{className:m}),a.createElement("span",{className:m})))),a.createElement("div",{className:p},t))}}}]);